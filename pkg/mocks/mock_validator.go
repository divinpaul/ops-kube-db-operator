// Code generated by MockGen. DO NOT EDIT.
// Source: validator.go

// Package mocks is a generated GoMock package.
package mocks

import (
	v1alpha1 "github.com/MYOB-Technology/ops-kube-db-operator/pkg/apis/postgresdb/v1alpha1"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockPostgresDBValidator is a mock of PostgresDBValidator interface
type MockPostgresDBValidator struct {
	ctrl     *gomock.Controller
	recorder *MockPostgresDBValidatorMockRecorder
}

// MockPostgresDBValidatorMockRecorder is the mock recorder for MockPostgresDBValidator
type MockPostgresDBValidatorMockRecorder struct {
	mock *MockPostgresDBValidator
}

// NewMockPostgresDBValidator creates a new mock instance
func NewMockPostgresDBValidator(ctrl *gomock.Controller) *MockPostgresDBValidator {
	mock := &MockPostgresDBValidator{ctrl: ctrl}
	mock.recorder = &MockPostgresDBValidatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockPostgresDBValidator) EXPECT() *MockPostgresDBValidatorMockRecorder {
	return m.recorder
}

// Validate mocks base method
func (m *MockPostgresDBValidator) Validate(crd *v1alpha1.PostgresDB) error {
	ret := m.ctrl.Call(m, "Validate", crd)
	ret0, _ := ret[0].(error)
	return ret0
}

// Validate indicates an expected call of Validate
func (mr *MockPostgresDBValidatorMockRecorder) Validate(crd interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Validate", reflect.TypeOf((*MockPostgresDBValidator)(nil).Validate), crd)
}
